{
  "version": 4,
  "terraform_version": "1.3.6",
  "serial": 345,
  "lineage": "3df58d46-3b78-d186-689a-7b832b6b6c13",
  "outputs": {
    "decoded_token": {
      "value": "OatXJj16vQmWx2uj4eBaZMUemb5aPvtY",
      "type": "string",
      "sensitive": true
    },
    "encoded_token": {
      "value": "T2F0WEpqMTZ2UW1XeDJ1ajRlQmFaTVVlbWI1YVB2dFk=",
      "type": "string",
      "sensitive": true
    },
    "secret_val": {
      "value": "ju076%RIwM8!NRFp",
      "type": "string",
      "sensitive": true
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "datahub_prerequisites_release",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "datahub-prerequisites-0.0.14.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prerequisites",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "datahub-prerequisites",
                "name": "prerequisites",
                "namespace": "datahub",
                "revision": 1,
                "values": "{\"cp-helm-charts\":{\"cp-control-center\":{\"enabled\":false},\"cp-kafka\":{\"enabled\":false},\"cp-kafka-connect\":{\"enabled\":false},\"cp-kafka-rest\":{\"enabled\":false},\"cp-ksql-server\":{\"enabled\":false},\"cp-schema-registry\":{\"enabled\":true,\"kafka\":{\"bootstrapServers\":\"prerequisites-kafka:9092\"}},\"cp-zookeeper\":{\"enabled\":false}},\"elasticsearch\":{\"antiAffinity\":\"soft\",\"clusterHealthCheckParams\":\"wait_for_status=yellow\\u0026timeout=1s\",\"enabled\":true,\"minimumMasterNodes\":1,\"replicas\":1},\"kafka\":{\"enabled\":true},\"mysql\":{\"auth\":{\"existingSecret\":\"mysql-secrets\"},\"enabled\":true},\"neo4j\":{\"acceptLicenseAgreement\":\"yes\",\"core\":{\"standalone\":true},\"defaultDatabase\":\"graph.db\",\"enabled\":false,\"neo4jPassword\":\"datahub\"},\"neo4j-community\":{\"acceptLicenseAgreement\":\"yes\",\"defaultDatabase\":\"graph.db\",\"enabled\":false,\"existingPasswordSecret\":\"neo4j-secrets\"},\"postgresql\":{\"auth\":{\"existingSecret\":\"postgresql-secrets\"},\"enabled\":false}}",
                "version": "0.0.14"
              }
            ],
            "name": "prerequisites",
            "namespace": "datahub",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 1000,
            "values": [
              "# Default configuration for pre-requisites\r\nelasticsearch:\r\n  enabled: true   # set this to false, if you want to provide your own ES instance.\r\n  replicas: 1\r\n  minimumMasterNodes: 1\r\n  # Set replicas to 1 and uncomment this to allow the instance to be scheduled on\r\n  # a master node when deploying on a single node Minikube / Kind / etc cluster.\r\n  antiAffinity: \"soft\"\r\n\r\n  # # If your running a single replica cluster add the following helm value\r\n  clusterHealthCheckParams: \"wait_for_status=yellow\u0026timeout=1s\"\r\n\r\n# Official neo4j chart uses the Neo4j Enterprise Edition which requires a license\r\nneo4j:\r\n  enabled: false  # set this to true, if you have a license for the enterprise edition\r\n  acceptLicenseAgreement: \"yes\"\r\n  defaultDatabase: \"graph.db\"\r\n  neo4jPassword: \"datahub\"\r\n  # For better security, add password to neo4j-secrets k8s secret and uncomment below\r\n  # existingPasswordSecret: neo4j-secrets\r\n  core:\r\n    standalone: true\r\n\r\n# Deploys neo4j community version. Only supports single node\r\nneo4j-community:\r\n  enabled: false   # set this to false, if you have a license for the enterprise edition\r\n  acceptLicenseAgreement: \"yes\"\r\n  defaultDatabase: \"graph.db\"\r\n  # For better security, add password to neo4j-secrets k8s secret and uncomment below\r\n  existingPasswordSecret: neo4j-secrets\r\n\r\nmysql:\r\n  enabled: true\r\n  auth:\r\n    # For better security, add mysql-secrets k8s secret with mysql-root-password, mysql-replication-password and mysql-password\r\n    existingSecret: mysql-secrets\r\n\r\npostgresql:\r\n  enabled: false\r\n  auth:\r\n    # For better security, add postgresql-secrets k8s secret with postgres-password, replication-password and password\r\n    existingSecret: postgresql-secrets\r\n\r\ncp-helm-charts:\r\n  # Schema registry is under the community license\r\n  cp-schema-registry:\r\n    enabled: true\r\n    kafka:\r\n      bootstrapServers: \"prerequisites-kafka:9092\"  # \u003c\u003crelease-name\u003e\u003e-kafka:9092\r\n  cp-kafka:\r\n    enabled: false\r\n  cp-zookeeper:\r\n    enabled: false\r\n  cp-kafka-rest:\r\n    enabled: false\r\n  cp-kafka-connect:\r\n    enabled: false\r\n  cp-ksql-server:\r\n    enabled: false\r\n  cp-control-center:\r\n    enabled: false\r\n\r\n# Bitnami version of Kafka that deploys open source Kafka https://artifacthub.io/packages/helm/bitnami/kafka\r\nkafka:\r\n  enabled: true\r\n"
            ],
            "verify": false,
            "version": "0.0.14",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.datahub_namespace",
            "kubernetes_secret.datahub_users_secret",
            "kubernetes_secret.mysql_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "datahub_release",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "datahub-0.2.154.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "datahub",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.10.0",
                "chart": "datahub",
                "name": "datahub",
                "namespace": "datahub",
                "revision": 1,
                "values": "{\"acryl-datahub-actions\":{\"enabled\":true,\"image\":{\"repository\":\"acryldata/datahub-actions\",\"tag\":\"v0.0.11\"},\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"300m\",\"memory\":\"256Mi\"}}},\"datahub-frontend\":{\"enabled\":true,\"extraVolumeMounts\":[{\"mountPath\":\"datahub-frontend/conf/user.props\",\"name\":\"datahub-users\",\"subPath\":\"user.props\"}],\"extraVolumes\":[{\"name\":\"datahub-users\",\"secret\":{\"defaultMode\":292,\"secretName\":\"datahub-users-secret\"}}],\"image\":{\"repository\":\"linkedin/datahub-frontend-react\"},\"ingress\":{\"annotations\":null,\"apiVersion\":\"networking.k8s.io/v1\",\"className\":\"nginx\",\"enabled\":false,\"hosts\":[{\"host\":\"localhost\",\"paths\":[\"/\"]}]},\"resources\":{\"limits\":{\"memory\":\"1000Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"500Mi\"}},\"service\":{\"annotations\":{\"service.beta.kubernetes.io/aws-load-balancer-nlb-target-type\":\"instance\",\"service.beta.kubernetes.io/aws-load-balancer-scheme\":\"internet-facing\",\"service.beta.kubernetes.io/aws-load-balancer-type\":\"external\"}}},\"datahub-gms\":{\"enabled\":true,\"extraEnvs\":[{\"name\":\"REACT_APP_LOGO_URL\",\"value\":\"https://media.licdn.com/dms/image/C560BAQFuyE9nc31ZAg/company-logo_100_100/0/1674001211364?e=2147483647\\u0026v=beta\\u0026t=2igGDeHhGp53qZg3lf1y2af_NsFRMhEmnojuOHgj6hE\"},{\"name\":\"REACT_APP_FAVICON_URL\",\"value\":\"https://media.licdn.com/dms/image/C560BAQFuyE9nc31ZAg/company-logo_100_100/0/1674001211364?e=2147483647\\u0026v=beta\\u0026t=2igGDeHhGp53qZg3lf1y2af_NsFRMhEmnojuOHgj6hE\"}],\"image\":{\"repository\":\"linkedin/datahub-gms\",\"tag\":\"v0.10.0\"},\"resources\":{\"limits\":{\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"512Mi\"}},\"service\":{\"annotations\":{\"service.beta.kubernetes.io/aws-load-balancer-nlb-target-type\":\"instance\",\"service.beta.kubernetes.io/aws-load-balancer-scheme\":\"internet-facing\",\"service.beta.kubernetes.io/aws-load-balancer-type\":\"external\"}}},\"datahub-mae-consumer\":{\"image\":{\"repository\":\"linkedin/datahub-mae-consumer\"},\"resources\":{\"limits\":{\"memory\":\"1536Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"256Mi\"}}},\"datahub-mce-consumer\":{\"image\":{\"repository\":\"linkedin/datahub-mce-consumer\"},\"resources\":{\"limits\":{\"memory\":\"1536Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"256Mi\"}}},\"datahubSystemUpdate\":{\"image\":{\"repository\":\"acryldata/datahub-upgrade\"},\"podAnnotations\":{},\"podSecurityContext\":{},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"300m\",\"memory\":\"256Mi\"}},\"securityContext\":{}},\"datahubUpgrade\":{\"batchDelayMs\":100,\"batchSize\":1000,\"enabled\":true,\"image\":{\"repository\":\"acryldata/datahub-upgrade\"},\"noCodeDataMigration\":{\"sqlDbType\":\"MYSQL\"},\"podAnnotations\":{},\"podSecurityContext\":{},\"restoreIndices\":{\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"300m\",\"memory\":\"256Mi\"}}},\"securityContext\":{}},\"elasticsearchSetupJob\":{\"enabled\":true,\"image\":{\"repository\":\"linkedin/datahub-elasticsearch-setup\"},\"podAnnotations\":{},\"podSecurityContext\":{\"fsGroup\":1000},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"300m\",\"memory\":\"256Mi\"}},\"securityContext\":{\"runAsUser\":1000}},\"global\":{\"datahub\":{\"appVersion\":\"1.0\",\"encryptionKey\":{\"provisionSecret\":{\"autoGenerate\":true,\"enabled\":true},\"secretKey\":\"encryption_key_secret\",\"secretRef\":\"datahub-encryption-secrets\"},\"gms\":{\"nodePort\":\"30001\",\"port\":\"8080\"},\"mae_consumer\":{\"nodePort\":\"30002\",\"port\":\"9091\"},\"managed_ingestion\":{\"defaultCliVersion\":\"0.10.0\",\"enabled\":true},\"metadata_service_authentication\":{\"enabled\":true,\"provisionSecrets\":{\"enabled\":false}},\"monitoring\":{\"enablePrometheus\":true},\"systemUpdate\":{\"enabled\":true},\"version\":\"v0.10.0\"},\"datahub_analytics_enabled\":true,\"datahub_standalone_consumers_enabled\":false,\"elasticsearch\":{\"host\":\"elasticsearch-master\",\"index\":{\"enableMappingsReindex\":true,\"enableSettingsReindex\":true,\"upgrade\":{\"allowDocCountMismatch\":false,\"cloneIndices\":true}},\"insecure\":\"false\",\"port\":\"9200\",\"useSSL\":\"false\"},\"graph_service_impl\":\"elasticsearch\",\"kafka\":{\"bootstrap\":{\"server\":\"prerequisites-kafka:9092\"},\"partitions\":1,\"replicationFactor\":1,\"schemaregistry\":{\"type\":\"KAFKA\",\"url\":\"http://prerequisites-cp-schema-registry:8081\"},\"topics\":{\"datahub_upgrade_history_topic_name\":\"DataHubUpgradeHistory_v1\",\"datahub_usage_event_name\":\"DataHubUsageEvent_v1\",\"failed_metadata_change_event_name\":\"FailedMetadataChangeEvent_v4\",\"failed_metadata_change_proposal_topic_name\":\"FailedMetadataChangeProposal_v1\",\"metadata_audit_event_name\":\"MetadataAuditEvent_v4\",\"metadata_change_event_name\":\"MetadataChangeEvent_v4\",\"metadata_change_log_timeseries_topic_name\":\"MetadataChangeLog_Timeseries_v1\",\"metadata_change_log_versioned_topic_name\":\"MetadataChangeLog_Versioned_v1\",\"metadata_change_proposal_topic_name\":\"MetadataChangeProposal_v1\",\"platform_event_topic_name\":\"PlatformEvent_v1\"},\"zookeeper\":{\"server\":\"prerequisites-zookeeper:2181\"}},\"sql\":{\"datasource\":{\"driver\":\"com.mysql.jdbc.Driver\",\"host\":\"prerequisites-mysql:3306\",\"hostForMysqlClient\":\"prerequisites-mysql\",\"password\":{\"secretKey\":\"mysql-root-password\",\"secretRef\":\"mysql-secrets\"},\"port\":\"3306\",\"url\":\"jdbc:mysql://prerequisites-mysql:3306/datahub?verifyServerCertificate=false\\u0026useSSL=true\\u0026useUnicode=yes\\u0026characterEncoding=UTF-8\\u0026enabledTLSProtocols=TLSv1.2\",\"username\":\"root\"}},\"strict_mode\":true},\"kafkaSetupJob\":{\"enabled\":true,\"image\":{\"repository\":\"linkedin/datahub-kafka-setup\"},\"podAnnotations\":{},\"podSecurityContext\":{\"fsGroup\":1000},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"300m\",\"memory\":\"768Mi\"}},\"securityContext\":{\"runAsUser\":1000}},\"mysqlSetupJob\":{\"enabled\":true,\"image\":{\"repository\":\"acryldata/datahub-mysql-setup\"},\"podAnnotations\":{},\"podSecurityContext\":{\"fsGroup\":1000},\"securityContext\":{\"runAsUser\":1000}},\"postgresqlSetupJob\":{\"enabled\":false,\"image\":{\"repository\":\"acryldata/datahub-postgres-setup\"},\"podAnnotations\":{},\"podSecurityContext\":{\"fsGroup\":1000},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"300m\",\"memory\":\"256Mi\"}},\"securityContext\":{\"runAsUser\":1000}}}",
                "version": "0.2.154"
              }
            ],
            "name": "datahub",
            "namespace": "datahub",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 1000,
            "values": [
              "# Values to start up datahub after starting up the datahub-prerequisites chart with \"prerequisites\" release name\r\ndatahub-gms:\r\n  enabled: true\r\n  extraEnvs:\r\n      - name: REACT_APP_LOGO_URL\r\n        # value: https://nuodata.io/logo.png\r\n        value: https://media.licdn.com/dms/image/C560BAQFuyE9nc31ZAg/company-logo_100_100/0/1674001211364?e=2147483647\u0026v=beta\u0026t=2igGDeHhGp53qZg3lf1y2af_NsFRMhEmnojuOHgj6hE\r\n      - name: REACT_APP_FAVICON_URL\r\n        # value: https://nuodata.io/logo.png\r\n        value: https://media.licdn.com/dms/image/C560BAQFuyE9nc31ZAg/company-logo_100_100/0/1674001211364?e=2147483647\u0026v=beta\u0026t=2igGDeHhGp53qZg3lf1y2af_NsFRMhEmnojuOHgj6hE\r\n  image:\r\n    repository: linkedin/datahub-gms\r\n    tag: \"v0.10.0\" #defaults to .global.datahub.version\r\n  resources:\r\n    limits:\r\n      memory: 1Gi\r\n    requests:\r\n      cpu: 10m\r\n      memory: 512Mi\r\n  service:\r\n    annotations:\r\n      service.beta.kubernetes.io/aws-load-balancer-type: \"external\"\r\n      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: \"instance\"\r\n      service.beta.kubernetes.io/aws-load-balancer-scheme: \"internet-facing\"\r\n\r\ndatahub-frontend:\r\n  enabled: true\r\n  image:\r\n    repository: linkedin/datahub-frontend-react\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  resources:\r\n    limits:\r\n      memory: 1000Mi\r\n    requests:\r\n      cpu: 10m\r\n      memory: 500Mi\r\n  # Set up ingress to expose react front-end\r\n  ingress:\r\n    enabled: false\r\n    apiVersion: \"networking.k8s.io/v1\"\r\n    className: \"nginx\"\r\n    annotations:\r\n      # kubernetes.io/ingress.class: ingress-nginx\r\n      # kubernetes.io/ingress.class: alb\r\n    #   alb.ingress.kubernetes.io/scheme: internet-facing\r\n    #   alb.ingress.kubernetes.io/target-type: instance\r\n    #   #alb.ingress.kubernetes.io/certificate-arn: \u003c\u003ccertificate-arn\u003e\u003e\r\n    #   alb.ingress.kubernetes.io/inbound-cidrs: 0.0.0.0/0\r\n    #   alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}]'\r\n    #   #alb.ingress.kubernetes.io/actions.ssl-redirect: '{\"Type\": \"redirect\", \"RedirectConfig\": { \"Protocol\": \"HTTPS\", \"Port\": \"443\", \"StatusCode\": \"HTTP_301\"}}'\r\n    hosts:\r\n      - host: localhost\r\n        # redirectPaths:\r\n        #  - path: /*\r\n        #    name: ssl-redirect\r\n        #    port: \"80\"\r\n        paths:\r\n          - /\r\n              \r\n  extraVolumes:\r\n   - name: datahub-users\r\n     secret:\r\n       defaultMode: 0444\r\n       secretName:  datahub-users-secret\r\n  extraVolumeMounts:\r\n   - name: datahub-users\r\n     mountPath: datahub-frontend/conf/user.props\r\n     subPath: user.props\r\n  service:\r\n    annotations:\r\n      service.beta.kubernetes.io/aws-load-balancer-type: \"external\"\r\n      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: \"instance\"\r\n      service.beta.kubernetes.io/aws-load-balancer-scheme: \"internet-facing\"\r\n\r\nacryl-datahub-actions:\r\n  enabled: true\r\n  image:\r\n    repository: acryldata/datahub-actions\r\n    tag: \"v0.0.11\"\r\n  resources:\r\n    limits:\r\n      memory: 512Mi\r\n    requests:\r\n      cpu: 300m\r\n      memory: 256Mi\r\n\r\ndatahub-mae-consumer:\r\n  image:\r\n    repository: linkedin/datahub-mae-consumer\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  resources:\r\n    limits:\r\n      memory: 1536Mi\r\n    requests:\r\n      cpu: 100m\r\n      memory: 256Mi\r\n\r\ndatahub-mce-consumer:\r\n  image:\r\n    repository: linkedin/datahub-mce-consumer\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  resources:\r\n    limits:\r\n      memory: 1536Mi\r\n    requests:\r\n      cpu: 100m\r\n      memory: 256Mi\r\n\r\nelasticsearchSetupJob:\r\n  enabled: true\r\n  image:\r\n    repository: linkedin/datahub-elasticsearch-setup\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  #extraEnvs:\r\n  #  - name: USE_AWS_ELASTICSEARCH\r\n  #    value: \"true\"\r\n  resources:\r\n    limits:\r\n      cpu: 500m\r\n      memory: 512Mi\r\n    requests:\r\n      cpu: 300m\r\n      memory: 256Mi\r\n  podSecurityContext:\r\n    fsGroup: 1000\r\n  securityContext:\r\n    runAsUser: 1000\r\n  podAnnotations: {}\r\n\r\nkafkaSetupJob:\r\n  enabled: true\r\n  image:\r\n    repository: linkedin/datahub-kafka-setup\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  resources:\r\n    limits:\r\n      cpu: 500m\r\n      memory: 1024Mi\r\n    requests:\r\n      cpu: 300m\r\n      memory: 768Mi\r\n  podSecurityContext:\r\n    fsGroup: 1000\r\n  securityContext:\r\n    runAsUser: 1000\r\n  podAnnotations: {}\r\n\r\nmysqlSetupJob:\r\n  enabled: true\r\n  image:\r\n    repository: acryldata/datahub-mysql-setup\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  podSecurityContext:\r\n    fsGroup: 1000\r\n  securityContext:\r\n    runAsUser: 1000\r\n  podAnnotations: {}\r\n\r\npostgresqlSetupJob:\r\n  enabled: false\r\n  image:\r\n    repository: acryldata/datahub-postgres-setup\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  resources:\r\n    limits:\r\n      cpu: 500m\r\n      memory: 512Mi\r\n    requests:\r\n      cpu: 300m\r\n      memory: 256Mi\r\n  podSecurityContext:\r\n    fsGroup: 1000\r\n  securityContext:\r\n    runAsUser: 1000\r\n  podAnnotations: {}\r\n\r\ndatahubUpgrade:\r\n  enabled: true\r\n  image:\r\n    repository: acryldata/datahub-upgrade\r\n    # tag: \"v0.10.0 # defaults to .global.datahub.version\r\n  batchSize: 1000\r\n  batchDelayMs: 100\r\n  noCodeDataMigration:\r\n    sqlDbType: \"MYSQL\"\r\n  podSecurityContext: {}\r\n  securityContext: {}\r\n  podAnnotations: {}\r\n  restoreIndices:\r\n    resources:\r\n      limits:\r\n        cpu: 500m\r\n        memory: 512Mi\r\n      requests:\r\n        cpu: 300m\r\n        memory: 256Mi\r\n\r\n## Runs system update processes\r\n## Includes: Elasticsearch Indices Creation/Reindex (See global.elasticsearch.index for additional configuration)\r\n## ONLY APPLICABLE FOR VERSIONS 0.10.0 AND ABOVE\r\ndatahubSystemUpdate:\r\n  image:\r\n    repository: acryldata/datahub-upgrade\r\n  podSecurityContext: {}\r\n  securityContext: {}\r\n  podAnnotations: {}\r\n  resources:\r\n    limits:\r\n      cpu: 500m\r\n      memory: 512Mi\r\n    requests:\r\n      cpu: 300m\r\n      memory: 256Mi\r\n\r\nglobal:\r\n  strict_mode: true\r\n  graph_service_impl: elasticsearch\r\n  datahub_analytics_enabled: true\r\n  datahub_standalone_consumers_enabled: false\r\n\r\n  elasticsearch:\r\n    host: \"elasticsearch-master\"\r\n    port: \"9200\"\r\n    insecure: \"false\"\r\n    useSSL: \"false\"\r\n    #auth:\r\n    #  username: \u003c\u003cusername\u003e\u003e\r\n    #  password:\r\n    #    secretRef: elasticsearch-secrets\r\n    #    secretKey: elasticsearch-password\r\n\r\n    ## The following section controls when and how reindexing of elasticsearch indices are performed\r\n    ## ONLY APPLICABLE FOR VERSIONS 0.10.0 AND ABOVE\r\n    index:\r\n      ## Enable reindexing when mappings change based on the data model annotations\r\n      enableMappingsReindex: true\r\n\r\n      ## Enable reindexing when static index settings change.\r\n      ## Dynamic settings which do not require reindexing are not affected\r\n      ## Primarily this should be enabled when re-sharding is necessary for scaling/performance.\r\n      enableSettingsReindex: true\r\n\r\n      ## Index settings can be overridden for entity indices or other indices on an index by index basis\r\n      ## Some index settings, such as # of shards, requires reindexing while others, i.e. replicas, do not\r\n      ## Non-Entity indices do not require the prefix\r\n      # settingsOverrides: '{\"graph_service_v1\":{\"number_of_shards\":\"5\"},\"system_metadata_service_v1\":{\"number_of_shards\":\"5\"}}'\r\n      ## Entity indices do not require the prefix or suffix\r\n      # entitySettingsOverrides: '{\"dataset\":{\"number_of_shards\":\"10\"}}'\r\n\r\n      ## The amount of delay between indexing a document and having it returned in queries\r\n      ## Increasing this value can improve performance when ingesting large amounts of data\r\n      # refreshIntervalSeconds: 1\r\n\r\n      ## The following options control settings for datahub-upgrade job when creating or reindexing indices\r\n      upgrade:\r\n        ## When reindexing is required, this option will clone the existing index as a backup\r\n        ## The clone indices are not currently managed.\r\n        cloneIndices: true\r\n\r\n        ## Typically when reindexing the document counts between the original and destination indices should match.\r\n        ## In some cases reindexing might not be able to proceed due to incompatibilities between a document in the\r\n        ## orignal index and the new index's mappings. This document could be dropped and re-ingested or restored from\r\n        ## the SQL database.\r\n        ##\r\n        ## This setting allows continuing if and only if the cloneIndices setting is also enabled which\r\n        ## ensures a complete backup of the original index is preserved.\r\n        allowDocCountMismatch: false\r\n\r\n  kafka:\r\n    bootstrap:\r\n        server: \"prerequisites-kafka:9092\"\r\n    zookeeper:\r\n        server: \"prerequisites-zookeeper:2181\"\r\n    topics:\r\n      metadata_change_event_name: \"MetadataChangeEvent_v4\"\r\n      failed_metadata_change_event_name: \"FailedMetadataChangeEvent_v4\"\r\n      metadata_audit_event_name: \"MetadataAuditEvent_v4\"\r\n      datahub_usage_event_name: \"DataHubUsageEvent_v1\"\r\n      metadata_change_proposal_topic_name: \"MetadataChangeProposal_v1\"\r\n      failed_metadata_change_proposal_topic_name: \"FailedMetadataChangeProposal_v1\"\r\n      metadata_change_log_versioned_topic_name: \"MetadataChangeLog_Versioned_v1\"\r\n      metadata_change_log_timeseries_topic_name: \"MetadataChangeLog_Timeseries_v1\"\r\n      platform_event_topic_name: \"PlatformEvent_v1\"\r\n      datahub_upgrade_history_topic_name: \"DataHubUpgradeHistory_v1\"\r\n    ## For AWS MSK set this to a number larger than 1. Preferrably 3.\r\n    partitions: 1\r\n    replicationFactor: 1\r\n    schemaregistry:\r\n      url: \"http://prerequisites-cp-schema-registry:8081\"\r\n      type: KAFKA\r\n\r\n  sql:\r\n    datasource:\r\n      host: \"prerequisites-mysql:3306\"\r\n      hostForMysqlClient: \"prerequisites-mysql\"\r\n      port: \"3306\"\r\n      url: \"jdbc:mysql://prerequisites-mysql:3306/datahub?verifyServerCertificate=false\u0026useSSL=true\u0026useUnicode=yes\u0026characterEncoding=UTF-8\u0026enabledTLSProtocols=TLSv1.2\"\r\n      driver: \"com.mysql.jdbc.Driver\"\r\n      username: \"root\"\r\n      password:\r\n        secretRef: mysql-secrets\r\n        secretKey: mysql-root-password\r\n\r\n  datahub:\r\n    version: v0.10.0\r\n    gms:\r\n      port: \"8080\"\r\n      nodePort: \"30001\"\r\n\r\n    monitoring:\r\n      enablePrometheus: true\r\n\r\n    mae_consumer:\r\n      port: \"9091\"\r\n      nodePort: \"30002\"\r\n\r\n    appVersion: \"1.0\"\r\n    ## SET IT TO TRUE FOR VERSIONS 0.10.0 AND ABOVE\r\n    systemUpdate:\r\n      ## The following options control settings for datahub-upgrade job which will\r\n      ## managed ES indices and other update related work\r\n      enabled: true\r\n\r\n    encryptionKey:\r\n      secretRef: \"datahub-encryption-secrets\"\r\n      secretKey: \"encryption_key_secret\"\r\n      # Set to false if you'd like to provide your own secret.\r\n      provisionSecret:\r\n        enabled: true\r\n        autoGenerate: true\r\n      # Only specify if autoGenerate set to false\r\n      #  secretValues:\r\n      #    encryptionKey: \u003cencryption key value\u003e\r\n\r\n    managed_ingestion:\r\n      enabled: true\r\n      defaultCliVersion: \"0.10.0\"\r\n\r\n    metadata_service_authentication:\r\n      enabled: true\r\n      #systemClientId: \"__datahub_system\"\r\n      #systemClientSecret:\r\n      #  secretRef: \"datahub-auth-secrets\"\r\n      #  secretKey: \"token_service_signing_key\"\r\n      #tokenService:\r\n      #  signingKey:\r\n      #    secretRef: \"datahub-auth-secrets\"\r\n      #    secretKey: \"token_service_signing_key\"\r\n      #  salt:\r\n      #    secretRef: \"datahub-auth-secrets\"\r\n      #    secretKey: \"token_service_salt\"\r\n      # Set to false if you'd like to provide your own auth secrets\r\n      provisionSecrets:\r\n       enabled: false\r\n      #  autoGenerate: true\r\n      # Only specify if autoGenerate set to false\r\n        # secretValues:\r\n        #  secret: \"secret_key\"\r\n        #  signingKey: \"secret_key\"\r\n        #  salt: \"secret_key\"\r\n"
            ],
            "verify": false,
            "version": "0.2.154",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "helm_release.datahub_prerequisites_release",
            "kubernetes_namespace.datahub_namespace",
            "kubernetes_secret.datahub_users_secret",
            "kubernetes_secret.mysql_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "datahub_namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "datahub",
            "metadata": [
              {
                "annotations": {
                  "name": "datahub"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "datahub_namespace": "created-via-terraform"
                },
                "name": "datahub",
                "resource_version": "1286447",
                "uid": "bc00d709-7439-4f10-966f-454b6207fade"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "auth_Secret",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "system_client_secret": "T2F0WEpqMTZ2UW1XeDJ1ajRlQmFaTVVlbWI1YVB2dFk=",
              "token_service_salt": "T2F0WEpqMTZ2UW1XeDJ1ajRlQmFaTVVlbWI1YVB2dFk=",
              "token_service_signing_key": "T2F0WEpqMTZ2UW1XeDJ1ajRlQmFaTVVlbWI1YVB2dFk="
            },
            "id": "datahub/datahub-auth-secrets",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "app.kubernetes.io/managed-by": "Helm",
                  "meta.helm.sh/release-name": "datahub",
                  "meta.helm.sh/release-namespace": "datahub"
                },
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "datahub-auth-secrets",
                "namespace": "datahub",
                "resource_version": "1286451",
                "uid": "48ea94e6-0024-4f9d-be1d-ffbbd75670ca"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "system_client_secret",
                  "type": "string"
                }
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "token_service_salt",
                  "type": "string"
                }
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "token_service_signing_key",
                  "type": "string"
                }
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.datahub_namespace",
            "random_password.random_token"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "datahub_users_secret",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "user.props": "datahub:datahub123"
            },
            "id": "datahub/datahub-users-secret",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "datahub-users-secret",
                "namespace": "datahub",
                "resource_version": "1286452",
                "uid": "52e1f5d7-026b-4128-8c2a-676e25e66559"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.datahub_namespace",
            "kubernetes_secret.mysql_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "mysql_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "mysql-root-password": "datahub"
            },
            "id": "datahub/mysql-secrets",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "mysql-secrets",
                "namespace": "datahub",
                "resource_version": "1286450",
                "uid": "18e46fa2-bf09-48d8-b52d-975a7cbd6473"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.datahub_namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_password",
      "name": "random_master_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$6IrMOAFlRuAN0o19BQ53y.PTXBEJYhKhV0Hz6fy2Pho2OrKBg1sue",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": "_!%^",
            "result": "ju076%RIwM8!NRFp",
            "special": true,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_password",
      "name": "random_token",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$F3JFSjrC1YadQ0MN8jL8hObDwHDz5bTVggFTdWn2TPhhOXEA.XJTq",
            "id": "none",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "OatXJj16vQmWx2uj4eBaZMUemb5aPvtY",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
